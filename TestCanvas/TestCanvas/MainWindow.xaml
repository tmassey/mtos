<Window
      x:Class="aXon.Warehouse.Desktop.MainWindow"

    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:enumerations="clr-namespace:aXon.Rover.Enumerations;assembly=aXon.Rover"
    xmlns:testCanvas="clr-namespace:aXon.Warehouse.Desktop">
    <Window.Resources>
        <testCanvas:EnumToBooleanConverter x:Key="EnumConverter" />
        <BooleanToVisibilityConverter x:Key="myBoolToVisibilityConverter" />
        <testCanvas:EnumConverter x:Key="enumConverter"/>
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition MaxHeight="20"></RowDefinition>
            <RowDefinition MaxHeight="50"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
           
            <ColumnDefinition></ColumnDefinition>            
        </Grid.ColumnDefinitions>
        <Menu Grid.ColumnSpan="2" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Top"  >
            <MenuItem Header="File" >
                <MenuItem Header="Exit" Tag="Exit" Click="MenuItem_OnClick"  />
            </MenuItem>
        </Menu>
        <ToolBar Grid.Row="1"  Grid.ColumnSpan="2" >
            <RadioButton GroupName="mode" Foreground="Blue"
                             IsChecked="{Binding Path=ModeMap,                                Converter={StaticResource EnumConverter},
                                 ConverterParameter={x:Static enumerations:MapMode.PathMode}}"
                             Content="Path Location" />
            <RadioButton GroupName="mode" Foreground="BlueViolet"
                             IsChecked="{Binding Path=ModeMap, 
                                 Converter={StaticResource EnumConverter},
                                 ConverterParameter={x:Static enumerations:MapMode.PickupMode}}"
                             Content="Pick Up Location" />
            <RadioButton GroupName="mode" Foreground="Brown"
                             IsChecked="{Binding Path=ModeMap, 
                                 Converter={StaticResource EnumConverter},
                                 ConverterParameter={x:Static enumerations:MapMode.StorageMode}}"
                             Content="Storage Location" />
            <RadioButton GroupName="mode" Foreground="Chartreuse"
                             IsChecked="{Binding Path=ModeMap, 
                                 Converter={StaticResource EnumConverter},
                                 ConverterParameter={x:Static enumerations:MapMode.ShipMode}}"
                             Content="Ship Location" />
            <RadioButton GroupName="mode" Foreground="Crimson"
                             IsChecked="{Binding Path=ModeMap, 
                                 Converter={StaticResource EnumConverter},
                                 ConverterParameter={x:Static enumerations:MapMode.ChargeMode}}"
                             Content="Charging Location" />
            <RadioButton GroupName="mode" Foreground="Orange"
                             IsChecked="{Binding Path=ModeMap, 
                                 Converter={StaticResource EnumConverter},
                                 ConverterParameter={x:Static enumerations:MapMode.PersonMode}}"
                             Content="Person Path Location" />
            <RadioButton GroupName="mode" Foreground="DarkGray"
                             IsChecked="{Binding Path=ModeMap, 
                                 Converter={StaticResource EnumConverter},
                                 ConverterParameter={x:Static enumerations:MapMode.ObstructionMode}}"
                             Content="Obstruction Location" />

        </ToolBar>
         
            <!--<UniformGrid Columns="2">
            <TextBlock>Time:</TextBlock>
            <TextBlock Text="{Binding Path=Seconds}" />
       
            <TextBlock>Fuel:</TextBlock>
            <TextBlock Text="{Binding Path=Fuel}" />
       
            <TextBlock>Rest Factor:</TextBlock>
            <TextBlock Text="{Binding Path=Fuel}" />
        
            <TextBlock>Distance to Destination:</TextBlock>
            <TextBlock Text="{Binding Path=DistanceToDestination}" />
       
            <TextBlock>Last Move:</TextBlock>
            <TextBlock Text="{Binding Path=CurrentDirection}" />
        
            <TextBlock>Postion:</TextBlock>
            <UniformGrid Columns="2">
                <TextBlock Text="{Binding Path=Position[0]}" />
                <TextBlock Text="{Binding Path=Position[1]}" />
            </UniformGrid>
       
            <TextBlock>Destination:</TextBlock>
            <UniformGrid Columns="2">
                <TextBlock Text="{Binding Path=Destination[0]}" />
                <TextBlock Text="{Binding Path=Destination[1]}" />
            </UniformGrid>
      
            <TextBlock># Rests Taken:</TextBlock>
            <TextBlock Text="{Binding Path=Rests}" />
        </UniformGrid>-->


     


        <TabControl Grid.Row="2" Grid.Column="1" Margin="5">

            <TabItem Header="Warehouse Details" x:Name="WarehouseTab">
                <Grid >
                    <StackPanel Margin="5">
                        <UniformGrid Columns="2">
                            <TextBlock>Name:</TextBlock>
                            <TextBox Text="{Binding Path=Warehouse.Name}" />

                            <TextBlock>Length (Feet):</TextBlock>
                            <TextBox Text="{Binding Path=Warehouse.Length}" />

                            <TextBlock>Width (Feet):</TextBlock>
                            <TextBox Text="{Binding Path=Warehouse.Width}" />
                        </UniformGrid>

                        <Button Margin="5" HorizontalAlignment="Right" Click="CommitWarehouse">Commit Warehouse</Button>
                        <Button Click="RunNetworks">Train Pallet Bots</Button>
                    </StackPanel>
                </Grid>
            </TabItem>
                <TabItem Header="Warehouse Map" x:Name="MapTab">
                
                <Viewbox Stretch="Fill" HorizontalAlignment="Left"  VerticalAlignment="Top">
                    <Canvas x:Name="Canvas" Background="Transparent" Margin="0" Width="810"
                        Height="810" HorizontalAlignment="Left"
                        VerticalAlignment="Top">

                        <Canvas.LayoutTransform>
                            <ScaleTransform ScaleY="1" />
                        </Canvas.LayoutTransform>


                    </Canvas>
                </Viewbox>
            </TabItem>
            <TabItem Header="Message Log">
                <TextBox VerticalScrollBarVisibility="Visible" MinHeight="300" VerticalAlignment="Stretch"  x:Name="Progresstxt" />
            </TabItem>
            <TabItem Header="Neural Networks" x:Name="NeuralTab">
                <Grid>
                    <Grid.RowDefinitions><RowDefinition MaxHeight="35"></RowDefinition><RowDefinition></RowDefinition></Grid.RowDefinitions>
                    <Button HorizontalAlignment="Right" Margin="5" Grid.Row="0" Click="RefreshNetworks">Refresh</Button>
                    <DataGrid x:Name="Networks" SelectionChanged="Networks_OnSelectionChanged"  AutoGenerateColumns="False" Grid.Row="1">
                        <DataGrid.Columns>

                            <!--<DataGridTextColumn Header="Id" Binding="{Binding Id}" />-->
                            <DataGridTextColumn Header="Start X" Binding="{Binding StartPosition.X}" />
                            <DataGridTextColumn Header="Start Y" Binding="{Binding StartPosition.Y}" />
                            <DataGridTextColumn Header="Start Type" Binding="{Binding StartPosition.MapMode, Converter={StaticResource enumConverter}}" />
                            <DataGridTextColumn Header="Dest X" Binding="{Binding EndPosition.X}" />
                            <DataGridTextColumn Header="Dest Y" Binding="{Binding EndPosition.Y}" />
                            <DataGridTextColumn Header="Dest Type" Binding="{Binding EndPosition.MapMode, Converter={StaticResource enumConverter}}" />

                            <DataGridTemplateColumn Header="Actions" Width="200">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                       <Button Tag="{Binding Id}" Click="RunNetwork" HorizontalAlignment="Right">Simulate</Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Rovers">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="0">
                        <Button HorizontalAlignment="Right" Margin="5"  Click="AddRover">Add</Button>
                        <Button HorizontalAlignment="Right" Margin="5"  Click="EditRover">Edit</Button>
                        <Button HorizontalAlignment="Right" Margin="5"  Click="RefreshRovers">Refresh</Button>
                    </StackPanel>
                    <DataGrid x:Name="Rovers" SelectionChanged="Rovers_OnSelectionChanged" AutoGenerateColumns="False" Grid.Row="1">
                        <DataGrid.Columns>

                            <!--<DataGridTextColumn Header="Id" Binding="{Binding Id}" />-->
                            <DataGridTextColumn Header="Start X" Binding="{Binding StartPosition.X}" />
                            <DataGridTextColumn Header="Start Y" Binding="{Binding StartPosition.Y}" />
                            <DataGridTextColumn Header="Dest X" Binding="{Binding EndPosition.X}" />
                            <DataGridTextColumn Header="Dest Y" Binding="{Binding EndPosition.Y}" />

                            <DataGridTemplateColumn Header="Actions" Width="200">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Tag="{Binding Id}" Click="RunNetwork" HorizontalAlignment="Right">Run</Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>         
        </TabControl>
     
        

    </Grid>
    
</Window>